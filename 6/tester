#include<stdio.h>
#include<stdlib.h>
int split;

void swap(int *p1,int *p2)
{
    int temp = *p1;
    *p1 = *p2;
    *p2 = temp;
}

void partition(int * arr,int l,int r)
{
    int pivot=arr[l],b=l,e=r+1;
    do
    {
        do
        {
            if( arr[++b]>=pivot )
                break;
        } while ( b<r );
        do
        {
            if( arr[--e]<=pivot )
                break;
        } while ( e>l );
        if( b<e )
            swap( (arr+b),(arr+e) );
    } while ( b<e );
    swap( (arr+e),(arr+l) );
    split=e;
    return ;
}

void Quicksort(int * arr,int l,int r)
{
   if( l>=r )
      return ;
    partition(arr,l,r);
   int s=split;
 Quicksort(arr,l,(s-1)) ;
 Quicksort(arr,(s+1),r) ;
   return;
}

void main()
{
   int n,*a;
   printf("enter the value of n\n");
   scanf("%d",&n);
   a=(int*)malloc(n*sizeof(n));
   printf("enter the elements\n");
   for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
   Quicksort(a,0,n-1);
   printf("sorted list\n");
   for(int i=0;i<n;i++)
    printf("%d  ",a[i]);
}
